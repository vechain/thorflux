{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 6,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "influxdb",
        "uid": "eea2frhqbiuwwa"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "center",
            "cellOptions": {
              "type": "auto",
              "wrapText": false
            },
            "inspect": false
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "color": "dark-red",
                  "index": 0,
                  "text": "Missed"
                },
                "1": {
                  "color": "green",
                  "index": 1,
                  "text": "Filled"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "filled"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "applyToRow": true,
                  "type": "color-background"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 22,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "_time"
          }
        ]
      },
      "pluginVersion": "11.6.0",
      "targets": [
        {
          "query": "import \"date\"\n\n\na = from(bucket: \"vechain\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"recent_slots\" and (r._field == \"epoch\" or r._field == \"block_number\"))\n  |> group()\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> rename(columns: {epoch: \"_value\"})\n\nb = from(bucket: \"vechain\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"recent_slots\" and r._field == \"epoch\")\n  |> group()\n  |> keep(columns:[\"_time\", \"filled\", \"proposer\"])\n\njoin(tables: {t1: a, t2: b}, on: [\"_time\"])\n    |> rename(columns: {_value: \"epoch\", block_number: \"block_number\", filled: \"filled\"})\n    |> keep(columns:[\"_time\", \"filled\", \"block_number\", \"proposer\"])\n\n",
          "refId": "A"
        }
      ],
      "title": "slots",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "(.*)\\s\\{.*\\}",
            "renamePattern": "$1"
          }
        },
        {
          "id": "convertFieldType",
          "options": {
            "conversions": [
              {
                "destinationType": "number",
                "targetField": "filled"
              }
            ],
            "fields": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "default": false,
        "type": "influxdb",
        "uid": "eea2frhqbiuwwa"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 1
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 7,
        "x": 0,
        "y": 22
      },
      "id": 2,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "11.6.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eea2frhqbiuwwa"
          },
          "query": "from(bucket: \"vechain\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"recent_slots\" and r[\"_field\"] == \"block_number\")\n  |> filter(fn: (r) => r.filled == \"0\")\n  |> group()\n  |> count()\n  |> yield(name: \"_value\")",
          "refId": "A"
        }
      ],
      "title": "Empty slots",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "eea2frhqbiuwwa"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Expected signer"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "signer"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Actual Signer"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "blockNum"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Block number"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 17,
        "x": 7,
        "y": 22
      },
      "id": 7,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 2,
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "block_number"
          }
        ]
      },
      "pluginVersion": "11.6.0",
      "targets": [
        {
          "query": "from(bucket: \"vechain\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"missed_slots\")\n  |> map(fn: (r) => ({ r with signer: r.actual_proposer, blockNum: int(v: r.block_number) }))\n  |> drop(\"columns\": [\"_measurement\", \"_start\", \"_stop\", \"_field\", \"actual_proposer\", \"chain_tag\", \"_time\", \"block_number\"])\n  |> sort(columns: [\"blockNum\"], desc: true)\n  |> limit(n:5)",
          "refId": "A"
        }
      ],
      "title": "Missed slots",
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "eea2frhqbiuwwa"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Candidates"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 30
      },
      "id": 6,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 6,
        "showHeader": true
      },
      "pluginVersion": "11.6.0",
      "targets": [
        {
          "query": " from(bucket: \"vechain\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"authority_nodes\" and (r._field == \"candidates0\" or r._field == \"candidates1\" or r._field == \"candidates2\" or r._field == \"candidates3\" or r._field == \"candidates4\"))\n  |> map(fn: (r) => ({ r with blockNum: int(v: r.block_number) }))\n  |> sort(columns: [\"blockNum\"], desc: true)\n   |> drop(columns: [\"_measurement\", \"chain_tag\", \"_field\", \"_time\", \"_start\", \"_stop\"])",
          "refId": "A"
        }
      ],
      "title": "Candidates",
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "eea2frhqbiuwwa"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Signer"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 30
      },
      "id": 5,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 6,
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Block num"
          }
        ]
      },
      "pluginVersion": "11.6.0",
      "targets": [
        {
          "query": " from(bucket: \"vechain\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"authority_nodes\" and r._field == \"signer\")\n  |> map(fn: (r) => ({ r with blockSigner: r.signer, blockNum: int(v: r.block_number) }))\n  |> drop(columns: [\"_measurement\", \"chain_tag\", \"_field\", \"_time\", \"_start\", \"_stop\"])\n  |> sort(columns: [\"blockNum\"], desc: true)\n  |> limit(n:1)",
          "refId": "A"
        }
      ],
      "title": "Block signer",
      "type": "table"
    },
    {
      "datasource": {
        "uid": "eea2frhqbiuwwa"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto",
              "wrapText": true
            },
            "inspect": false
          },
          "mappings": [
            {
              "options": {
                "false": {
                  "color": "green",
                  "index": 0
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "applyToRow": true,
                  "mode": "basic",
                  "type": "color-background",
                  "wrapText": false
                }
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "match": "true",
                      "result": {
                        "color": "dark-green",
                        "index": 0
                      }
                    },
                    "type": "special"
                  },
                  {
                    "options": {
                      "match": "false",
                      "result": {
                        "color": "semi-dark-red",
                        "index": 1
                      }
                    },
                    "type": "special"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "_time"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Block time"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "_field"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Proposer"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Online"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "block_num"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Block number"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 38
      },
      "id": 8,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "lastNotNull"
          ],
          "show": false
        },
        "frameIndex": 214,
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "Online"
          }
        ]
      },
      "pluginVersion": "11.6.0",
      "targets": [
        {
          "query": "import \"strings\"\n\nmaxBlock = from(bucket: \"vechain\")\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r._measurement == \"authority_nodes\")\n    |> drop(columns: [\"_measurement\", \"chain_tag\", \"_value\", \"_field\"])\n    |> map(fn: (r) => ({ block_num: int(v: r.block_number) }))\n    |> max(column: \"block_num\")\n     |> findRecord(fn: (key) => true, idx: 0)\n\n\n    from(bucket: \"vechain\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"authority_nodes\" and r._field != \"signer\" and not strings.hasPrefix(v: r._field, prefix: \"candidat\"))\n  |> map(fn: (r) => ({ r with block_num: int(v: r.block_number) }))\n  |> filter(fn: (r) => r.block_num == maxBlock.block_num)\n  |> group(columns: [\"block_number\"])\n  |> drop(columns: [\"_measurement\", \"chain_tag\", \"_start\", \"_stop\", \"block_number\"])",
          "refId": "A"
        }
      ],
      "title": "Online validators",
      "type": "table"
    },
    {
      "datasource": {
        "default": true,
        "type": "influxdb",
        "uid": "eea2frhqbiuwwa"
      },
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 15,
        "w": 24,
        "x": 0,
        "y": 46
      },
      "id": 1,
      "options": {},
      "pluginVersion": "11.6.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eea2frhqbiuwwa"
          },
          "query": "import \"date\"\n\nfrom(bucket: \"vechain\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"recent_slots\" and (r._field == \"epoch\" or r._field == \"block_number\"))\n  |> group()\n  |> sort(columns: [\"_time\"])",
          "refId": "A"
        }
      ],
      "title": "Slots",
      "type": "vechain-slotmap-panel"
    },
    {
      "datasource": {
        "default": true,
        "type": "influxdb",
        "uid": "eea2frhqbiuwwa"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "fixed"
          },
          "custom": {
            "align": "center",
            "cellOptions": {
              "type": "auto",
              "wrapText": true
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 61
      },
      "id": 3,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 3,
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "_time"
          }
        ]
      },
      "pluginVersion": "11.6.0",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "eea2frhqbiuwwa"
          },
          "query": "from(bucket: \"vechain\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"recent_slots\")\n  |> filter(fn: (r) => r[\"filled\"] == \"0\")\n  |> group(columns: [\"proposer\"])\n  |> count(column: \"_value\")\n  |> group()\n  |> sort(columns: [\"_value\"], desc: true)\n  |> map(fn: (r) => ({ r with count: r._value}))\n  |> keep(columns: [\"count\", \"proposer\"])",
          "refId": "A"
        }
      ],
      "title": "Worst Performing Nodes",
      "type": "table"
    }
  ],
  "preload": false,
  "schemaVersion": 41,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-30d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Slots",
  "uid": "be9urigr0u800b",
  "version": 1
}