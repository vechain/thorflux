{"version":3,"file":"module.js","mappings":"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","sources":["webpack://vechain-slotmap-panel/external amd \"@emotion/css\"","webpack://vechain-slotmap-panel/external amd \"@grafana/data\"","webpack://vechain-slotmap-panel/external amd \"@grafana/ui\"","webpack://vechain-slotmap-panel/external amd \"module\"","webpack://vechain-slotmap-panel/external amd \"react\"","webpack://vechain-slotmap-panel/webpack/bootstrap","webpack://vechain-slotmap-panel/webpack/runtime/compat get default export","webpack://vechain-slotmap-panel/webpack/runtime/define property getters","webpack://vechain-slotmap-panel/webpack/runtime/hasOwnProperty shorthand","webpack://vechain-slotmap-panel/webpack/runtime/make namespace object","webpack://vechain-slotmap-panel/webpack/runtime/publicPath","webpack://vechain-slotmap-panel/./node_modules/grafana-public-path.js","webpack://vechain-slotmap-panel/./components/SimplePanel.tsx","webpack://vechain-slotmap-panel/./module.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__89__;","module.exports = __WEBPACK_EXTERNAL_MODULE__781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","module.exports = __WEBPACK_EXTERNAL_MODULE__308__;","module.exports = __WEBPACK_EXTERNAL_MODULE__959__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"public/plugins/vechain-slotmap-panel/\";","\nimport amdMetaModule from 'amd-module';\n\n__webpack_public_path__ =\n  amdMetaModule && amdMetaModule.uri\n    ? amdMetaModule.uri.slice(0, amdMetaModule.uri.lastIndexOf('/') + 1)\n    : 'public/plugins/vechain-slotmap-panel/';\n","import React from 'react';\nimport { PanelProps } from '@grafana/data';\nimport { useTheme2 } from '@grafana/ui';\nimport { css } from '@emotion/css';\n\nexport const EpochSlotsPanel: React.FC<PanelProps> = ({ data, width, height }) => {\n  const theme = useTheme2();\n\n  const DEFAULT_SLOTS_PER_EPOCH = 180;\n\n  const processData = () => {\n    if (!data.series.length || !data.series[0].fields.length) {\n      return { epochs: [], maxSlots: DEFAULT_SLOTS_PER_EPOCH };\n    }\n\n    const epochField = data.series[0].fields.find(f => f.name === 'epoch');\n    const valueField = data.series[0].fields.find(f => f.name === '_value');\n\n    if (!epochField || !valueField) {\n      return { epochs: [], maxSlots: DEFAULT_SLOTS_PER_EPOCH };\n    }\n\n    const epochData: { [key: number]: number[] } = {};\n    let maxSlotsInEpoch = DEFAULT_SLOTS_PER_EPOCH;\n\n    // First pass: group by epoch and find max slots\n    for (let i = 0; i < epochField.values.length; i++) {\n      const epoch = epochField.values[i];\n      const value = valueField.values[i];\n\n      if (!epochData[epoch]) {\n        epochData[epoch] = [];\n      }\n\n      epochData[epoch].push(value);\n      maxSlotsInEpoch = Math.max(maxSlotsInEpoch, epochData[epoch].length);\n    }\n\n    const epochs = Object.entries(epochData)\n      .map(([epoch, values]) => ({\n        epoch: parseInt(epoch),\n        values\n      }))\n      .sort((a, b) => a.epoch - b.epoch);\n\n    const processedEpochs = epochs.map((epochData, index) => {\n      const isFirstEpoch = index === 0;\n      const isOnlyEpoch = epochs.length === 1;\n\n      if (isFirstEpoch && !isOnlyEpoch) {\n        return {\n          epoch: epochData.epoch,\n          values: epochData.values\n        };\n      } else {\n        const filledValues = [...epochData.values];\n        while (filledValues.length < maxSlotsInEpoch) {\n          filledValues.push(-1);\n        }\n        return {\n          epoch: epochData.epoch,\n          values: filledValues\n        };\n      }\n    });\n\n    return {\n      epochs: processedEpochs,\n      maxSlots: maxSlotsInEpoch\n    };\n  };\n\n  const { epochs, maxSlots } = processData();\n\n  const getSlotNumber = (epoch: number, slotIndex: number) => {\n    return (epoch * maxSlots) + slotIndex;\n  };\n\n  const getSlotColor = (value: number) => {\n    switch (value) {\n      case 1:\n        return theme.colors.success.main;\n      case 0:\n        return theme.colors.error.main;\n      default:\n        return theme.colors.secondary.main;\n    }\n  };\n\n  const SLOT_SIZE = 16;\n  const SLOT_GAP = 2;\n  const SLOTS_PER_MARKER = 12;\n  const HEADER_BOTTOM_MARGIN = 24;\n  const EPOCH_NUMBER_WIDTH = 60;\n  const EPOCH_NUMBER_MARGIN = 8;\n\n  const styles = {\n    container: css`\n      padding: ${theme.spacing(1)};\n      width: 100%;\n      height: 100%;\n      overflow: auto;\n      position: relative;\n      isolation: isolate;\n    `,\n    row: css`\n      display: flex;\n      align-items: center;\n      margin-bottom: ${theme.spacing(0.5)};\n      position: relative;\n    `,\n    epochNumber: css`\n      width: ${EPOCH_NUMBER_WIDTH}px;\n      margin-right: ${EPOCH_NUMBER_MARGIN}px;\n      font-size: ${theme.typography.size.sm};\n    `,\n    slotsContainer: css`\n      display: flex;\n      flex-wrap: wrap;\n      gap: ${SLOT_GAP}px;\n      position: relative;\n    `,\n    slot: css`\n      width: ${SLOT_SIZE}px;\n      height: ${SLOT_SIZE}px;\n      border-radius: 2px;\n      cursor: pointer;\n      transition: opacity 0.2s;\n      position: relative;\n      &:hover {\n        opacity: 0.8;\n      }\n    `,\n    tooltip: css`\n      position: absolute;\n      background: ${theme.colors.background.secondary};\n      padding: ${theme.spacing(0.5)} ${theme.spacing(1)};\n      border-radius: ${theme.shape.radius.default};\n      font-size: ${theme.typography.size.xs};\n      z-index: 9999;\n      transform: translate(-50%, 0);\n      white-space: nowrap;\n      pointer-events: none;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n      top: 100%;\n      margin-top: 1px;\n    `,\n    headerContainer: css`\n      margin-bottom: ${HEADER_BOTTOM_MARGIN}px;\n      position: relative;\n      height: 20px;\n      z-index: 1;\n    `,\n    headerContent: css`\n      position: relative;\n      margin-left: ${EPOCH_NUMBER_WIDTH + EPOCH_NUMBER_MARGIN}px;\n    `,\n    headerMarker: css`\n      position: absolute;\n      text-align: center;\n      transform: translateX(-50%);\n      color: ${theme.colors.text.secondary};\n      font-size: ${theme.typography.size.sm};\n    `\n  };\n\n  const [tooltip, setTooltip] = React.useState<{\n    visible: boolean;\n    text: string;\n    style: React.CSSProperties;\n  }>({\n    visible: false,\n    text: '',\n    style: {},\n  });\n\n  const handleSlotHover = (\n    event: React.MouseEvent,\n    epoch: number,\n    slotIndex: number,\n    value: number\n  ) => {\n    const element = event.currentTarget;\n    const rect = element.getBoundingClientRect();\n    const containerRect = element.closest(`.${styles.container}`)?.getBoundingClientRect();\n\n    if (!containerRect) return;\n\n    const status = value === 1 ? 'filled' : value === 0 ? 'missed' : 'pending';\n    const slotNumber = getSlotNumber(epoch, slotIndex);\n\n    const left = rect.left - containerRect.left + rect.width / 2;\n    const top = rect.top - containerRect.top + rect.height;\n\n    setTooltip({\n      visible: true,\n      text: `Slot ${slotNumber}: ${status}`,\n      style: {\n        left: `${left}px`,\n        top: `${top}px`,\n      },\n    });\n  };\n\n  const getMarkerPosition = (slotIndex: number) => {\n    const slotTotalWidth = SLOT_SIZE + SLOT_GAP;\n    return slotIndex * slotTotalWidth + (SLOT_SIZE / 2);\n  };\n\n  const markers = Array.from({ length: Math.ceil(maxSlots / SLOTS_PER_MARKER) }, (_, i) => {\n    const slotIndex = i * SLOTS_PER_MARKER;\n    return {\n      slotIndex,\n      position: getMarkerPosition(slotIndex)\n    };\n  });\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.headerContainer}>\n        <div className={styles.headerContent}>\n          {markers.map(({ slotIndex, position }) => (\n            <div\n              key={slotIndex}\n              className={styles.headerMarker}\n              style={{ left: position }}\n            >\n              {slotIndex}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {epochs.map(({ epoch, values }) => (\n        <div key={epoch} className={styles.row}>\n          <div className={styles.epochNumber}>{epoch}</div>\n          <div className={styles.slotsContainer}>\n            {values.map((value, index) => (\n              <div\n                key={index}\n                className={styles.slot}\n                style={{\n                  backgroundColor: getSlotColor(value),\n                  opacity: value === -1 ? 0.3 : 1,\n                }}\n                onMouseEnter={(e) => handleSlotHover(e, epoch, index, value)}\n                onMouseLeave={() => setTooltip(prev => ({ ...prev, visible: false }))}\n              />\n            ))}\n          </div>\n        </div>\n      ))}\n\n      {tooltip.visible && (\n        <div\n          className={styles.tooltip}\n          style={tooltip.style}\n        >\n          {tooltip.text}\n        </div>\n      )}\n    </div>\n  );\n};","import { PanelPlugin } from '@grafana/data';\nimport { SimpleOptions } from './types';\nimport { EpochSlotsPanel } from './components/SimplePanel';\n\nexport const plugin = new PanelPlugin<SimpleOptions>(EpochSlotsPanel).setPanelOptions((builder) => {\n  return builder;\n});\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__89__","__WEBPACK_EXTERNAL_MODULE__781__","__WEBPACK_EXTERNAL_MODULE__7__","__WEBPACK_EXTERNAL_MODULE__308__","__WEBPACK_EXTERNAL_MODULE__959__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","p","slice","lastIndexOf","plugin","PanelPlugin","data","width","height","theme","useTheme2","epochs","maxSlots","series","length","fields","epochField","find","f","name","valueField","epochData","maxSlotsInEpoch","i","values","epoch","push","Math","max","entries","map","parseInt","sort","b","processedEpochs","index","isFirstEpoch","isOnlyEpoch","filledValues","processData","getSlotColor","colors","success","main","error","secondary","styles","container","css","spacing","row","epochNumber","typography","size","sm","slotsContainer","slot","tooltip","background","shape","radius","default","xs","headerContainer","headerContent","EPOCH_NUMBER_WIDTH","headerMarker","text","setTooltip","React","visible","style","handleSlotHover","event","slotIndex","element","currentTarget","rect","getBoundingClientRect","containerRect","closest","status","slotNumber","getSlotNumber","left","top","getMarkerPosition","SLOT_SIZE","markers","Array","from","ceil","_","position","div","className","backgroundColor","opacity","onMouseEnter","e","onMouseLeave","prev","setPanelOptions","builder"],"sourceRoot":""}